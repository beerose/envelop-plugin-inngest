// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`When using use-inngest-codemod to transform, the graphQL handler transforms code correctly when GraphQL handler already configures some extraPlugins 1`] = `
"import { createGraphQLHandler } from '@redwoodjs/graphql-server';

import directives from 'src/directives/**/*.{js,ts}';
import sdls from 'src/graphql/**/*.sdl.{js,ts}';
import services from 'src/services/**/*.{js,ts}';

import { getCurrentUser } from 'src/lib/auth';
import { db } from 'src/lib/db';
import { logger } from 'src/lib/logger';

import { foo } from 'src/lib/foo';

import { inngestPlugin } from \\"src/inngest/plugin\\";

export const handler = createGraphQLHandler({
  getCurrentUser,
  loggerConfig: { logger, options: {} },
  directives,
  sdls,
  services,
  extraPlugins: [foo, inngestPlugin],

  onException: () => {
    // Disconnect from your database with an unhandled exception.
    db.$disconnect();
  }
});
"
`;

exports[`When using use-inngest-codemod to transform, the graphQL handler transforms code correctly when GraphQL handler already has useInngest setup 1`] = `
"import { createGraphQLHandler } from \\"@redwoodjs/graphql-server\\";

import directives from \\"src/directives/**/*.{js,ts}\\";
import sdls from \\"src/graphql/**/*.sdl.{js,ts}\\";
import services from \\"src/services/**/*.{js,ts}\\";

import { getCurrentUser } from \\"src/lib/auth\\";
import { db } from \\"src/lib/db\\";
import { logger } from \\"src/lib/logger\\";

import { inngestPlugin } from \\"src/inngest/plugin\\";

export const handler = createGraphQLHandler({
  getCurrentUser,
  loggerConfig: { logger, options: {} },
  directives,
  sdls,
  services,
  extraPlugins: [inngestPlugin],

  onException: () => {
    // Disconnect from your database with an unhandled exception.
    db.$disconnect();
  }
});
"
`;

exports[`When using use-inngest-codemod to transform, the graphQL handler transforms code correctly when given a standard default GraphQL handler 1`] = `
"import { createGraphQLHandler } from '@redwoodjs/graphql-server'

import directives from 'src/directives/**/*.{js,ts}'
import sdls from 'src/graphql/**/*.sdl.{js,ts}'
import services from 'src/services/**/*.{js,ts}'

import { getCurrentUser } from 'src/lib/auth'
import { db } from 'src/lib/db'
import { logger } from 'src/lib/logger'

import { inngestPlugin } from \\"src/inngest/plugin\\";

export const handler = createGraphQLHandler({
  getCurrentUser,
  loggerConfig: { logger, options: {} },
  directives,
  sdls,
  services,

  onException: () => {
    // Disconnect from your database with an unhandled exception.
    db.$disconnect()
  },

  extraPlugins: [inngestPlugin]
})
"
`;
